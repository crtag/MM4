//
//  MM4Force+Electrostatic.swift
//
//
//  Created by Philip Turner on 10/14/23.
//

import OpenMM

// Electrostatic force, using an interaction group to mask out neutral atoms.
class MM4ElectrostaticForce: MM4Force {
  required init(system: MM4System) {
    let vacuumPermittivity: Double = 8.8541878128e-12
    let coulombConstant = 1 / (4 * Double.pi * vacuumPermittivity)
    var scaleFactor = coulombConstant
    
    let coulombsPerElementaryCharge: Double = 801088317 / 5e27
    scaleFactor *= coulombsPerElementaryCharge * coulombsPerElementaryCharge
    
    let metersPerNm: Double = 1e-9
    scaleFactor /= metersPerNm
    
    // Units: J -> aJ -> kJ/mol
    let AJPerJ: Double = 1e18
    scaleFactor *= AJPerJ * MM4KJPerMolPerAJ
    
    let force = OpenMM_NonbondedForce()
    let atoms = system.parameters.atoms
    let set = OpenMM_IntSet()
    for atomID in atoms.atomicNumbers.indices {
      var charge: Float = 0
      if let extendedParameters = atoms.extendedParameters[atomID] {
        charge = extendedParameters.charge
        set.insert(atomID)
      }
      force.addParticle(charge: Double(charge), sigma: 0.01, epsilon: 0)
    }
    
    // Don't remove 1,4 particles from the electrostatic exception force. The
    // correction force will "undo" the actions of each unwanted torsion.
    let bonds = system.parameters.bonds
    let bondPairs = OpenMM_BondArray(size: bonds.indices.count)
    for bondID in bonds.indices.indices {
      let bond = bonds.indices[bondID]
      bondPairs[bondID] = system.reorder(bond)
    }
    force.createExceptionsFromBonds(
      bondPairs, coulomb14Scale: 1.0, lj14Scale: 0.0)
    
    // Next, use reaction field with an extremely conservative cutoff.
    //
    // Source for initial choice of parameters:
    // https://pubs.rsc.org/en/content/articlehtml/2020/cp/d0cp03835k
    //
    // TODO: Add the necessary OpenMM bindings
//    force.nonbondedMethod = .cutoffNonPeriodic
//    force.useSwitchingFunction = true
//    force.cutoffDistance = 1.4
//    force.switchingDistance = 1.4 - 0.5
    
    super.init(forces: [force], forceGroup: 2)
  }
}

// ========================================================================== //
//
// Create a counterforce at short range that corrects for 1/2 of a
// dipole falling on the 1-3 border. In the paper about fluorine, Allinger
// mentioned some 1-4 fluorines on fluoroethane having a repulsive effect
// from their dipoles. This suggests 1-4 interactions ("sclfac = 1.000"?) are
// included, but perhaps not the 1-3 interactions.
//
// Create a different force to handle the dipole-dipole interactions along
// every possible path between two bonds, which wasn't fully handled when
// recording the 1-3/1-4 nonbonded exceptions. In other words, enumerate every
// torsion out there and create a nonbonded exception force for it.
//
// Find all the bonds on atom 1 that are present in a torsion. Repeat the same
// process for atom 4. Then, compute an O(n^2) algorithm on all of the dipole
// permutations ('n' in number of dipoles, often n = 2-3). A final force
// computes a charge-charge interaction with the partial charge generated by
// the involved bonds omitted.
//
// ========================================================================== //
//
// More efficient alternative: instead of projecting onto dipoles, factor in
// only the charges on 1-3 atoms that result from the dipoles present in 1-4
// atoms. This has an effect similar to scaling those atoms' charge-charge
// interactions by 0.5 in conventional force fields. It reproduces the same
// dynamics to a first-order approximation, but avoids something potentially as
// costly as torsion forces.
//
// Also, from the paper on induced dipoles:
//
// > It was later found that distances among interacting
// > centers, d, need to be empirically adjusted to give
// > better results in the induced dipole moments cal-
// > culations. They are adjusted as follows: (a) for all
// > nongeminal cases, 1,4 interactions and higher, all
// > distances are increased by a factor of 1.3,
// >     d = 1.3 * d
// > The need of using this scaling factor can be ratio-
// > nalized by the fact that we use midpoints of bonds,
// > instead of atoms, as interacting centers. Two ap-
// > proaches are basically the same when two dipoles
// > are far away from each other, however, the scaling
// > factor 1.3 is needed when two dipoles are very close
// > to each other. This scaling factor indicates that the
// > real source of polarization in the molecules might
// > better be considered to be at the atoms instead of
// > at the bonds. (b) For geminal cases, such as the 1,3
// > interaction in the moiety of x-Z-y, if one and ONLY
// > one of the two atoms attached to Z (x or y) is hy-
// > hdrogen, then the distances are increased by a factor
// > of 3.0,
// >     d = 3.0 ∗ d
// > otherwise the distances are increased by a factor
// > of 2.0,
// >     d = 2.0 ∗ d
// > The reason for these rather large scaling factors for
// > geminal cases is that the idealized dipole interaction
// > tensor is no longer valid when two dipoles are lo-
// > cated so close to one another.
//
// Summary: when two dipoles are part of the same angle, the dipole-dipole
// interaction model no longer applies **with respect to induced polarization**.
// At the distance of 1,4, there is still distortion from modeling atoms as two
// dipoles. This suggests that a partial charge model, where the partial charge
// centers are close to the nuclei, is qualitatively better than the
// dipole-dipole interaction formula **with respect to induced polarization**.
//
// The electrostatic exception force is not involving any costly induced
// dipoles. But, the insight may justify using the partial charges not only for
// performance, but also for correctness. This would be a bit different than
// existing forcefields that omit 1,3 and scale 1,4 by a half. It is like
// scaling 1,3 by a half and 1,4 by the full amount. However, both MM3 and MM4
// seem to be parameterized with the dipole-dipole approach with zero
// attenuation for 1,4 interactions.
//
// Update: dipole-dipole forces will be used initially, rather than
//         charge-charge forces
//
// ========================================================================== //
class MM4ElectrostaticExceptionForce: MM4Force {
  // debye = 0.02081943 electron-nm
  // charge-charge = q1 q2 / 4 pi epsilon_0
  // dipole-dipole = -mu1 mu2 / 4 pi epsilon_0 r_12^3
  //                  * (cos(omega) - 3(cos(theta1) * cos(theta2))
}

